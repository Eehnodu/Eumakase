<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.db.AiPlaylistMapper">

   <select id="getMusicIdx" parameterType="com.smhrd.model.ContextVO" resultType="com.smhrd.model.AiPlaylistVO">
   		SELECT musicIdx
   		FROM tb_aiplaylist
   		WHERE contextIdx = #{contextIdx}
   </select>	

	<insert id="savePlaylist"
		parameterType="com.smhrd.model.AiPlaylistVO">
		INSERT INTO tb_aiplaylist(musicIdx, contextIdx,
		contextIdx2, contextIdx3, contextIdx4, contextIdx5, myplIdx)
		VALUES(#{musicIdx}, #{contextIdx}, #{contextIdx2}, #{contextIdx3}, #{contextIdx4}, #{contextIdx5}, #{myplIdx})
	</insert>
	
	<!-- 다른 사람들의 playlist 가져오기 -->
	<select id="getOtherPl" parameterType="com.smhrd.model.AiPlaylistVO" resultType="com.smhrd.model.AiPlaylistVO">
		SELECT * FROM tb_aiplaylist WHERE myplIdx = #{myplIdx}
	</select>
	
	<select id="getPopularMusic" resultType="com.smhrd.model.AiPlaylistVO">
		SELECT musicIdx, count(plIdx) AS plIdx FROM ehroqkfdbcah.tb_aiplaylist GROUP BY musicIdx ORDER BY plIdx DESC LIMIT 8
	</select>
	
	<insert id="insertCopyPlayList" parameterType="com.smhrd.model.MyPlaylistVO">
	    INSERT INTO tb_aiplaylist (musicIdx, contextIdx, contextIdx2, contextIdx3, contextIdx4, contextIdx5, myplIdx)
			SELECT 
			    musicIdx, 
			    (SELECT contextIdx FROM (SELECT contextIdx FROM tb_context WHERE memId = #{memId} ORDER BY contextIdx DESC LIMIT 5) AS subquery ORDER BY contextIdx DESC LIMIT 1 OFFSET 0) AS contextIdx1,
			    (SELECT contextIdx FROM (SELECT contextIdx FROM tb_context WHERE memId = #{memId} ORDER BY contextIdx DESC LIMIT 5) AS subquery ORDER BY contextIdx DESC LIMIT 1 OFFSET 1) AS contextIdx2,
			    (SELECT contextIdx FROM (SELECT contextIdx FROM tb_context WHERE memId = #{memId} ORDER BY contextIdx DESC LIMIT 5) AS subquery ORDER BY contextIdx DESC LIMIT 1 OFFSET 2) AS contextIdx3,
			    (SELECT contextIdx FROM (SELECT contextIdx FROM tb_context WHERE memId = #{memId} ORDER BY contextIdx DESC LIMIT 5) AS subquery ORDER BY contextIdx DESC LIMIT 1 OFFSET 3) AS contextIdx4,
			    (SELECT contextIdx FROM (SELECT contextIdx FROM tb_context WHERE memId = #{memId} ORDER BY contextIdx DESC LIMIT 5) AS subquery ORDER BY contextIdx DESC LIMIT 1 OFFSET 4) AS contextIdx5,
			    (SELECT myplIdx FROM tb_myplaylist WHERE memId = #{memId} AND plName = #{plName} ORDER BY myplIdx DESC LIMIT 1) AS myplIdx
			FROM tb_aiplaylist
			WHERE myplIdx = #{myplIdx};
  	</insert>
	
</mapper>
